name: Security Audit

on:
  schedule:
    # 毎週月曜日 09:00 JST (00:00 UTC) に実行
    - cron: '0 0 * * 1'
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # 依存関係セキュリティ監査
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: npm audit --audit-level moderate
        continue-on-error: true
        
      - name: Generate audit report
        if: always()
        run: |
          npm audit --audit-level low --json > audit-report.json || true
          npm audit --audit-level low > audit-report.txt || true
          
      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-report
          path: |
            audit-report.json
            audit-report.txt
          retention-days: 30

  # Snyk脆弱性スキャン
  snyk-scan:
    name: Snyk Vulnerability Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' # スケジュール実行時はスキップ（APIトークンが必要なため）
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium --json > snyk-report.json
          
      - name: Upload Snyk report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: snyk-vulnerability-report
          path: snyk-report.json
          retention-days: 30

  # CodeQL セマンティック解析
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build packages
        run: npm run build
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # 機密情報スキャン
  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # セキュリティレポート集約
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-audit, codeql-analysis, secret-scan]
    if: always()
    
    steps:
      - name: Download audit artifacts
        uses: actions/download-artifact@v3
        with:
          name: security-audit-report
        continue-on-error: true
        
      - name: Download Snyk artifacts
        uses: actions/download-artifact@v3
        with:
          name: snyk-vulnerability-report
        continue-on-error: true
        
      - name: Generate summary report
        run: |
          echo "# Security Audit Summary" > security-summary.md
          echo "Generated on: $(date)" >> security-summary.md
          echo "" >> security-summary.md
          
          if [ -f audit-report.txt ]; then
            echo "## NPM Audit Results" >> security-summary.md
            echo '```' >> security-summary.md
            cat audit-report.txt >> security-summary.md
            echo '```' >> security-summary.md
            echo "" >> security-summary.md
          fi
          
          if [ -f snyk-report.json ]; then
            echo "## Snyk Scan Results" >> security-summary.md
            echo "Snyk report available in artifacts" >> security-summary.md
            echo "" >> security-summary.md
          fi
          
          echo "## Actions Taken" >> security-summary.md
          echo "- [x] NPM dependency audit completed" >> security-summary.md
          echo "- [x] CodeQL semantic analysis completed" >> security-summary.md
          echo "- [x] Secret detection scan completed" >> security-summary.md
          if [ -f snyk-report.json ]; then
            echo "- [x] Snyk vulnerability scan completed" >> security-summary.md
          else
            echo "- [ ] Snyk vulnerability scan (requires SNYK_TOKEN)" >> security-summary.md
          fi
          
      - name: Upload security summary
        uses: actions/upload-artifact@v3
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 90