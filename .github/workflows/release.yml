name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '18'

jobs:
  # リリース前の最終確認
  pre-release:
    name: Pre-release Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run full test suite
        run: |
          npm run lint
          npm run type-check
          npm test
          npm run build
          
      - name: Security audit
        run: npm audit --audit-level moderate

  # リリースビルド作成
  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    needs: pre-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build packages
        run: npm run build
        
      - name: Create distribution package
        run: |
          mkdir -p dist-release
          cp -r packages/*/dist dist-release/
          cp package.json dist-release/
          cp README.md dist-release/
          cp LICENSE dist-release/
          
      - name: Archive release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ github.ref_name }}
          path: dist-release/
          retention-days: 30

  # GitHub リリース作成
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download release artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-${{ github.ref_name }}
          path: dist-release/
          
      - name: Create release archive
        run: |
          cd dist-release
          tar -czf ../cqm-${{ github.ref_name }}.tar.gz .
          cd ..
          
      - name: Extract changelog
        id: changelog
        run: |
          VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')
          if [ -f CHANGELOG.md ]; then
            CHANGELOG=$(awk "/## \[${VERSION}\]/{flag=1;next}/## \[/{flag=0}flag" CHANGELOG.md || echo "No changelog entry found")
          else
            CHANGELOG="Release ${{ github.ref_name }}"
          fi
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.content }}
          files: cqm-${{ github.ref_name }}.tar.gz
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 将来のnpm公開 (現在は無効)
  # npm-publish:
  #   name: Publish to npm
  #   runs-on: ubuntu-latest
  #   needs: create-release
  #   if: "!contains(github.ref_name, 'alpha') && !contains(github.ref_name, 'beta')"
  #   
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         registry-url: 'https://registry.npmjs.org'
  #         
  #     - name: Install dependencies
  #       run: npm ci
  #       
  #     - name: Build packages
  #       run: npm run build
  #       
  #     - name: Publish to npm
  #       run: npm publish --access public
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}